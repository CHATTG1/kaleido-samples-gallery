{"version":3,"sources":["Configure.js","utils.js","Shared.js","HDwallet.js","IPFS.js","OpenLaw.js","IDregistry.js","AuditLog.js","App.js","serviceWorker.js","index.js"],"names":["Configure","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateLocalStorage","localStorage","setItem","consortiaId","current","value","appCredsUsername","appCredsPassword","nodeRpcEndpoint","hdwalletRpcEndpoint","hdwalletWalletId","ipfsRpcEndpoint","openlawRpcEndpoint","idRegistryRpcEndpoint","alert","React","createRef","getItem","_this2","react_default","a","createElement","className","type","ref","onClick","Component","utils","bindLocalStorage","t","buildWeb3","priv","getContract","web3","contract","contractAddress","contractArgs","abi","JSON","parse","bytecode","ret","eth","Contract","deploy","data","arguments","err","console","error","buildServiceUrlWithCreds","serviceRpcEndpoint","prefix","startsWith","concat","replace","Web3","MissingConfig","header","Link","to","HDwallet","componentDidMount","blockExplorerUrl","endsWith","setState","msg","missingConfig","msgChanged","event","val","target","lockMsg","locked","fetchHdwallet","hdwalletAddress","hdwalletPrivateKey","fetchingHdwalletIndex","asyncToGenerator","regenerator_default","mark","_callee","hwa","wrap","_context","prev","next","hasHdwalletIndex","getHdwalletAccount","state","hdwalletIndex","sent","address","privateKey","stop","hdwalletIndexChanged","deployingContract","contractDeploying","deployContract","params","gas","contractJson","encodeABI","accounts","signTransaction","then","signed","sendSignedTransaction","rawTransaction","on","receipt","log","newInstance","contractFrom","from","transactionHash","getContractValue","methods","get","contractValue","hdwalletAccountIndex","headers","Headers","append","btoa","fetch","method","response","json","assertThisInitialized","Shared","disabled","onChange","rows","min","max","readOnly","href","substr","IPFS","fileChangedHandler","file","files","selectedFile","uploadToIpfs","uploadingFile","formData","FormData","body","r","ipfsLink","ipfsHash","Hash","uploadedFile","fileDescriptionChanged","fileDescription","getContractValues","contractFileDescription","contractIpfsHash","downloadFile","url","personal","getAccounts","theContract","deployObj","sendTransaction","_this3","fileRef","rel","OpenLaw","fetchJWT","jwt","fetchTemplate","openlaw_jwt","register","status","configureChain","nodeUrl","systemCreds","encodeURIComponent","chainId","changeNetworkToPrivate","createTemplate","sampleAgreementTitle","sampleAgreement","contractExistsInLocalStorage","IDregistry","fetchDirectory","fetchingDirectory","dir","directoryContractAddress","directory","AuditLog","getNumberOfRecords","modifyingContract","validMsg","isJSON","str","e","addMsg","addingMsg","push","send","resp","auditRecordCount","fetchRecord","index","fetchingRecord","viewJsonMessage","_callee2","record","_context2","logEntries","viewRecordId","viewPrettyJson","payload","viewRecordEntityAddress","entityAddress","editingContract","showEditingContract","clearContract","removeItem","window","location","reload","changeContractAddress","editContractAddress","editContractAddressChanged","editContractAddressValid","length","editContractPanel","style","marginLeft","getSize","records","Number","parseInt","_loop","i","color","key","cursor","dist","title","iconColor","_this4","overflowY","maxHeight","borderRight","renderTimelines","JSONPretty_default","id","App","HashRouter","basename","process","integrity","crossOrigin","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83b59427.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import { PrimaryButton } from '@photic/design-kit';\n\nclass Configure extends Component {\n  constructor(props) {\n    super(props)\n    this.consortiaId = React.createRef()\n    this.appCredsUsername = React.createRef()\n    this.appCredsPassword = React.createRef()\n    this.nodeRpcEndpoint = React.createRef()\n    this.hdwalletRpcEndpoint = React.createRef()\n    this.hdwalletWalletId = React.createRef()\n    this.ipfsRpcEndpoint = React.createRef()\n    this.openlawRpcEndpoint = React.createRef()\n    this.idRegistryRpcEndpoint = React.createRef()\n  }\n\n  componentDidMount() {\n    this.consortiaId.current.value = localStorage.getItem('consortiaId');\n    this.appCredsUsername.current.value = localStorage.getItem('appCredsUsername');\n    this.appCredsPassword.current.value = localStorage.getItem('appCredsPassword');\n    this.nodeRpcEndpoint.current.value = localStorage.getItem('nodeRpcEndpoint');\n    this.hdwalletRpcEndpoint.current.value = localStorage.getItem('hdwalletRpcEndpoint');\n    this.hdwalletWalletId.current.value = localStorage.getItem('hdwalletWalletId');\n    this.ipfsRpcEndpoint.current.value = localStorage.getItem('ipfsRpcEndpoint');\n    this.openlawRpcEndpoint.current.value = localStorage.getItem('openlawRpcEndpoint');\n    this.idRegistryRpcEndpoint.current.value = localStorage.getItem('idRegistryRpcEndpoint');\n  }\n\n  updateLocalStorage = () => {\n    localStorage.setItem('consortiaId', this.consortiaId.current.value);\n    localStorage.setItem('appCredsUsername', this.appCredsUsername.current.value);\n    localStorage.setItem('appCredsPassword', this.appCredsPassword.current.value);\n    localStorage.setItem('nodeRpcEndpoint', this.nodeRpcEndpoint.current.value);\n    localStorage.setItem('hdwalletRpcEndpoint', this.hdwalletRpcEndpoint.current.value);\n    localStorage.setItem('hdwalletWalletId', this.hdwalletWalletId.current.value);\n    localStorage.setItem('ipfsRpcEndpoint', this.ipfsRpcEndpoint.current.value);\n    localStorage.setItem('openlawRpcEndpoint', this.openlawRpcEndpoint.current.value);\n    localStorage.setItem('idRegistryRpcEndpoint', this.idRegistryRpcEndpoint.current.value);\n    alert('latest settings saved!')\n  }\n\n  render() {\n    return (\n      <main className=\"container\">\n        <h2>Configure</h2>\n        <h5>\n          This is needed so the samples can connect to your Kaleido environment. All information will be\n          persisted to browser local storage.\n        </h5>\n        <br />\n        <h5>Shared</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">Consortia ID</label>\n          <div className=\"col-sm-4\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.consortiaId} />\n            <small>(ex: zzabcd1234)</small>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">App credentials username</label>\n          <div className=\"col-sm-4\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.appCredsUsername} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">App credentials password</label>\n          <div className=\"col-sm-6\">\n            <input type=\"password\" className=\"form-control col-sm-12\" ref={this.appCredsPassword} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">Node RPC endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.nodeRpcEndpoint} />\n            <small>(ex: https://zz..-zz..-rpc.us-east-2.kaleido.io)</small>\n          </div>\n        </div>\n        <h5>HDWallet</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">HDWallet RPC endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.hdwalletRpcEndpoint} />\n            <small>(ex: https://zz..-zz..-hdwallet.us-east-2.kaleido.io)</small>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">HDWallet wallet ID</label>\n          <div className=\"col-sm-4\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.hdwalletWalletId} />\n          </div>\n        </div>\n        <h5>IPFS</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">IPFS RPC endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.ipfsRpcEndpoint} />\n            <small>(ex: https://zz..-zz..-ipfs.us-east-2.kaleido.io)</small>\n          </div>\n        </div>\n        <h5>ID Registry</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">ID Registry RPC endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.idRegistryRpcEndpoint} />\n            <small>(ex: https://zz..-zz..-idregistry.us-east-2.kaleido.io)</small>\n          </div>\n        </div>\n        <h5>OpenLaw</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">OpenLaw RPC endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.openlawRpcEndpoint} />\n            <small>(ex: https://zz..-zz..-openlaw.us-east-2.kaleido.io)</small>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <div className=\"col-sm-6\">\n          <button type=\"button\"className=\"btn btn-success\" onClick={() => this.updateLocalStorage()}>\n            Save\n          </button>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Configure;\n","import Web3 from 'web3'\n\nconst utils = {\n  bindLocalStorage(t) {\n    t.consortiaId = localStorage.getItem('consortiaId');\n    t.appCredsUsername = localStorage.getItem('appCredsUsername');\n    t.appCredsPassword = localStorage.getItem('appCredsPassword');\n    t.nodeRpcEndpoint = localStorage.getItem('nodeRpcEndpoint');\n    t.hdwalletRpcEndpoint = localStorage.getItem('hdwalletRpcEndpoint');\n    t.hdwalletWalletId = localStorage.getItem('hdwalletWalletId');\n    t.ipfsRpcEndpoint = localStorage.getItem('ipfsRpcEndpoint');\n    t.openlawRpcEndpoint = localStorage.getItem('openlawRpcEndpoint');\n    t.idRegistryRpcEndpoint = localStorage.getItem('idRegistryRpcEndpoint');\n  },\n\n  buildWeb3(t) {\n    if (t.appCredsUsername && t.appCredsPassword && t.nodeRpcEndpoint) {\n      priv.buildWeb3(t)\n    }\n  },\n\n  getContract(web3, contract, contractAddress, contractArgs) {\n    let abi = JSON.parse(contract.abi);\n    let bytecode = '0x' + contract.bytecode;\n    try {\n      let ret = new web3.eth.Contract(abi, contractAddress);\n      if (!contractAddress) {\n        // this is a new deployment, build the deploy object\n        ret = ret.deploy({\n          data: bytecode,\n          arguments: contractArgs\n        });\n      }\n      return ret;\n    } catch(err) {\n      console.error('Failed to get contract', err)\n    }\n    return null;\n  },\n\n  buildServiceUrlWithCreds(t, serviceRpcEndpoint) {\n    let prefix = serviceRpcEndpoint.startsWith('http://') ? 'http://' : 'https://'\n    return `${prefix}${t.appCredsUsername}:${t.appCredsPassword}@${serviceRpcEndpoint.replace(prefix, '')}`\n  }\n}\n\nconst priv = {\n  buildWeb3(t) {\n    t.web3 = new Web3(utils.buildServiceUrlWithCreds(t, t.nodeRpcEndpoint))\n  }\n}\n\nexport default utils ","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction MissingConfig(props) {\n  return (\n    <main>\n      <div className=\"container\">\n        <h2>{props.header}</h2>\n        missing&nbsp;\n        <Link to=\"/\">\n          config\n        </Link>\n      </div>\n    </main>\n  )\n}\n\nexport default MissingConfig;\n","import React, { Component } from 'react';\nimport contractJson from './contracts/hdwallet.json'\n// import { sha256 } from 'js-sha256'\nimport utils from './utils'\nimport MissingConfig from './Shared'\n\nclass HDwallet extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = { \n      missingConfig: false,    \n      msg: '',\n      locked: false,\n      hdwalletAddress: '',\n      hdwalletPrivateKey: '',\n      hdwalletIndex: '',\n      fetchingHdwalletIndex: false,\n      contractDeploying: false,\n      contractAddress: '',\n      contractFrom: '',\n      contractValue: '',\n      transactionHash: ''\n    }\n  }\n\n  componentDidMount = () => {\n    if (!this.consortiaId || !this.appCredsUsername || !this.appCredsPassword || \n      !this.nodeRpcEndpoint || !this.hdwalletRpcEndpoint || !this.hdwalletWalletId) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n      return\n    }\n    this.blockExplorerUrl = this.nodeRpcEndpoint.endsWith('dev.photic.io') ? 'explorer-dev.photic.io' : 'explorer.kaleido.io'\n    this.setState(() => ({\n      msg: \"Sample message\"\n    }))\n  }\n\n  msgChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      msg: val\n    }));\n  };\n\n  lockMsg = () => {\n    this.setState(() => ({\n      locked: true\n    }));\n  };\n\n  fetchHdwallet = () => {\n    this.setState(() => ({\n      hdwalletAddress: '',\n      hdwalletPrivateKey: '',\n      fetchingHdwalletIndex: true\n    }), async () => {\n      if (this.hasHdwalletIndex()) {\n        let hwa = await this.getHdwalletAccount(this.state.hdwalletIndex)\n        this.setState(() => ({\n          hdwalletAddress: hwa.address,\n          hdwalletPrivateKey: hwa.privateKey,\n          fetchingHdwalletIndex: false\n        }));\n      }\n    });\n  }\n\n  hasHdwalletIndex = () => {\n    return this.state.hdwalletIndex && this.state.hdwalletIndex >= 0\n  }\n\n  hdwalletIndexChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      hdwalletIndex: val\n    }));\n  };\n  \n  deployingContract = () => {\n    this.setState(() => ({\n      contractDeploying: true\n    }), () => this.deployContract());\n  }\n\n  deployContract = () => {\n    let theContract = utils.getContract(this.web3, contractJson, '', [this.state.msg]);\n    let deployObj = theContract.encodeABI();\n    let params = {\n      gas: 500000000,\n      data: deployObj\n    };\n    this.web3.eth.accounts.signTransaction(params, `0x${this.state.hdwalletPrivateKey}`).then((signed) => {\n      this.web3.eth.sendSignedTransaction(signed.rawTransaction)\n        .on('receipt', (receipt) => {\n          console.log(receipt);\n        })\n        .on('error', (err) => {\n          console.error('Failed to deploy the smart contract. Error: ' + err);\n        })\n        .then((newInstance) => {\n          console.log(newInstance)\n          console.log(`\\tSmart contract deployed, ready to take calls at '${newInstance.contractAddress}'`);\n          this.setState(() => ({\n            contractAddress: newInstance.contractAddress,\n            contractFrom: newInstance.from,\n            transactionHash: newInstance.transactionHash\n          }));\n        });\n    });\n  }\n\n  getContractValue = () => {\n    let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, []);\n    theContract.methods.get().call().then((value) => {\n      console.log('\\tSmart contract current state: %j', value);\n      this.setState(() => ({\n        contractValue: value\n      }));\n    });\n  }\n\n  getHdwalletAccount = (hdwalletAccountIndex) => {\n    console.log('fetching hd wallet account to use')\n    const headers = new Headers();\n    headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n    headers.append('content-type', 'application/json')\n    headers.append('Accept', 'application/json, text/plain, */*',)\n    return fetch(`${this.hdwalletRpcEndpoint}/api/v1/wallets/${this.hdwalletWalletId}/accounts/${hdwalletAccountIndex}`, {\n      method: 'GET',\n      headers: headers\n    }).then(response => response.json())\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <MissingConfig header=\"HDWallet\" />\n      )\n    }\n    return (\n      <main className=\"container\">\n        <h2>HDWallet</h2>\n        <h5>\n          The purpose of this sample is to show how you can anonymously submit a transaction to the blockchain. We will deploy a \n          simple smart contract which stores and exposes a single value. \n        </h5>\n        <br />\n        <h6>\n          Step 1: Enter a message. This message is the value that will be included in the smart contract when we deploy it in the next step.\n        </h6>\n        <div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">Message</label>\n            <div className=\"col-sm-7\">\n              <textarea disabled={this.state.locked} onChange={this.msgChanged} \n                        className=\"form-control\"\n                        rows=\"2\" value = {this.state.msg} />\n            </div>\n            { !this.state.locked ?\n            <div className=\"col-sm-3\">\n              <button disabled={!this.state.msg} \n                      type=\"button\" className=\"btn btn-primary\" onClick={() => this.lockMsg()}>\n                Next\n              </button>\n            </div> : null }\n          </div>\n          { this.state.locked ? \n            <div>\n              <h6>\n                Step 2: Let's choose an account generated by your HDWallet to sign the transaction that deploys \n                our contract containing the above message.\n              </h6>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">HDWallet account index</label>\n                <div className=\"col-sm-2\">\n                  <input type=\"number\" min=\"0\" max=\"10000\" className=\"form-control col-sm-12\" \n                         disabled={this.state.contractDeploying}\n                         value={this.state.hdwalletIndex} onChange={this.hdwalletIndexChanged}></input>\n                </div>\n                { !this.state.contractDeploying ? \n                <div className=\"col-sm-3\">\n                  <button disabled={this.state.fetchingHdwalletIndex || !this.hasHdwalletIndex()} type=\"button\" \n                          className=\"btn btn-primary\" onClick={() => this.fetchHdwallet()}>\n                    Fetch HDWallet account\n                  </button>\n                </div> : null }\n              </div>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">HDWallet address</label>\n                <div className=\"col-sm-7\">\n                  <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.hdwalletAddress}></input>\n                </div>\n              </div>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">HDWallet signing key</label>\n                <div className=\"col-sm-7\">\n                  <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.hdwalletPrivateKey}></input>\n                </div>\n                { !this.state.contractDeploying && this.state.hdwalletAddress && this.state.hdwalletPrivateKey ? \n                <div className=\"col-sm-3\">\n                  <button type=\"button\" className=\"btn btn-success\" onClick={() => this.deployingContract()}>\n                    Deploy to blockchain!\n                  </button>\n                </div> : null }\n                { this.state.contractDeploying && !this.state.contractAddress ?\n                <div className=\"col-sm-3\">\n                  <button type=\"button\" disabled={true} className=\"btn btn-success\">\n                    Deploying to blockchain...\n                  </button>\n                </div>\n                : null}\n              </div>\n            </div> : null }\n            { this.state.contractAddress ? \n            <div>\n              <h6>\n                Step 3: Congrats!\n                <br />\n                The contract has been deployed to the following address: <i>{this.state.contractAddress}</i>.\n                <br />\n                On the blockchain ledger, this\n                <a target='blank' href={`https://${this.blockExplorerUrl}/tx/${this.state.transactionHash}?consortia=${this.consortiaId}&environment=${this.nodeRpcEndpoint.substr(8, 10)}`}> transaction </a> \n                shows that it originated from <i>{this.state.contractFrom}</i>. \n                Notice that this is the account you chose to use from your HDWallet and <b>not</b> your Kaleido node's account address. \n                For future transactions, you can sequentially iterate through the wallet accounts and obtain a different signing key for every transaction.\n                For complete anonymity you should never use a signing key more than once. \n              </h6>\n              <br />\n              <h6>Step 4: Verification - lets query the contract's value</h6>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">Contract value</label>\n                <div className=\"col-sm-7\">\n                  <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.contractValue}></input>\n                </div>\n                {!this.state.contractValue ?\n                <div className=\"col-sm-3\">\n                  <button type=\"button\" className=\"btn btn-primary\" \n                          onClick={() => this.getContractValue()}>\n                    Get contract value\n                  </button>\n                </div> : null }\n              </div>\n              {this.state.contractValue ? \n              <h6>\n                Conclusion: Notice that the value stored in the blockchain contract matches your message above.\n              </h6> : null }\n            </div> : null }\n          </div>  \n      </main>\n    );\n  }\n}\n\nexport default HDwallet;\n","import React, { Component } from 'react';\nimport contractJson from './contracts/ipfs.json'\nimport utils from './utils'\nimport MissingConfig from './Shared'\n\nclass IPFS extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = {     \n      missingConfig: false,\n      selectedFile: null,\n      uploadingFile: false,\n      uploadedFile: false,\n      ipfsHash: '',\n      ipfsLink: '',\n      fileDescription: '',\n      contractDeploying: false,\n      contractAddress: '',\n      contractFileDescription: '',\n      contractIpfsHash: ''\n    }\n  }\n\n  componentDidMount = () => {\n    if (!this.appCredsUsername || !this.appCredsPassword || !this.nodeRpcEndpoint || !this.ipfsRpcEndpoint) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n    }\n  }\n\n  fileChangedHandler = (event) => {\n    const file = event.target.files[0]\n    if (!file) {\n      this.setState(() => ({\n        selectedFile: null\n      }))\n    } else {\n      this.setState(() => ({\n        selectedFile: file\n      }))  \n    }\n  }\n\n  uploadToIpfs = () => {\n    this.setState(() => ({\n      uploadingFile: true\n    }), () => {\n      const headers = new Headers();\n      headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n      headers.append('Accept', 'application/json, text/plain, */*',)  \n      const formData = new FormData()\n      formData.append('blob', this.state.selectedFile)\n      fetch(`${this.ipfsRpcEndpoint}/api/v0/add`, {\n        method: 'POST',\n        headers: headers,\n        body: formData\n      })\n      .then(r => r.json())\n      .then(data => {\n        console.log(data)\n        let ipfsLink = utils.buildServiceUrlWithCreds(this, `${this.ipfsRpcEndpoint}/api/v0`)\n        this.setState(() => ({\n          ipfsHash: data.Hash,\n          ipfsLink: `${ipfsLink}/cat/${data.Hash}`,\n          uploadedFile: true,\n          uploadingFile: false\n        })) \n      })\n    }) \n  }\n\n  fileDescriptionChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      fileDescription: val\n    })) \n  }\n\n  deployingContract = () => {\n    this.setState(() => ({\n      contractDeploying: true\n    }), () => this.deployContract());\n  }\n\n  async deployContract() {\n    let accounts = await this.web3.eth.personal.getAccounts();\n    let theContract = utils.getContract(this.web3, contractJson, '', [this.state.fileDescription, this.state.ipfsHash])\n    let deployObj = theContract.encodeABI();\n    let params = {\n      from: accounts[0],\n      gas: 500000000,\n      data: deployObj\n    };\n    this.web3.eth.sendTransaction(params)\n      .on('receipt', (receipt) => {\n        console.log(receipt);\n      })\n      .on('error', (err) => {\n        console.error('Failed to deploy the smart contract. Error: ' + err);\n      })\n      .then((newInstance) => {\n        console.log(newInstance)\n        console.log(`\\tSmart contract deployed, ready to take calls at '${newInstance.contractAddress}'`);\n        this.setState(() => ({\n          contractAddress: newInstance.contractAddress\n        }));\n      });\n  }\n\n  getContractValues = () => {\n    let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, []);\n    theContract.methods.get().call().then((data) => {\n      console.log('\\tSmart contract current state: %j', data);\n      this.setState(() => ({\n        contractFileDescription: data['0'],\n        contractIpfsHash: data['1']\n      }));\n    });\n  }\n\n  downloadFile = () => {\n    var headers = new Headers();\n    headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n    headers.append('Accept', 'application/json, text/plain, */*',)\n    let url = `${this.ipfsRpcEndpoint}/api/v0/get/${this.state.ipfsHash}`\n    fetch(url, {\n      method: 'GET',\n      headers: headers\n    })\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <MissingConfig header=\"IPFS\" />\n      )\n    }\n    return (\n      <main className=\"container\">\n        <h2>IPFS</h2>\n        <h5>\n          The purpose of this sample is to show how you can add a file to IPFS, and then store a \n          description of the file along with the IPFS content hash in a blockchain smart contract. \n          This is a popular pattern for storing large amounts of data off-chain (in IPFS) and storing the \n          reference (IPFS content hash) of where the data is located on-chain.\n        </h5>\n        <br />\n        <h6>\n          Step 1: Add a file to IPFS and retrieve the IPFS hash back once it's been added.\n        </h6>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">Upload a file</label>\n          <div className=\"col-sm-3\">\n            <input disabled={this.state.uploadedFile} type=\"file\" \n                   onChange={this.fileChangedHandler}\n                   ref={this.fileRef} />\n          </div>\n          { !this.state.uploadedFile ?\n          <div className=\"col-sm-5\">\n            <button disabled={!this.state.selectedFile || this.state.uploadingFile} type=\"button\" className=\"btn btn-primary\" \n                    onClick={() => this.uploadToIpfs()}>\n              Upload file\n            </button>\n          </div> : null }\n        </div>\n\n        { this.state.uploadedFile ? \n        <div>\n          <h6>\n            Step 2: The file has been added to IPFS with the following content hash: <i>{this.state.ipfsHash}</i>.\n            <br /> Enter a friendly file description for this file and then we can deploy the smart contract containing\n            the description and IPFS content hash.\n          </h6>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">File description</label>\n            <div className=\"col-sm-7\">\n              <input type=\"text\" className=\"form-control col-sm-12\" readOnly={this.state.contractDeploying}\n                     onChange={this.fileDescriptionChanged} value={this.state.fileDescription} />\n            </div>\n            { !this.state.contractDeploying ? \n            <div className=\"col-sm-3\">\n              <button disabled={!this.state.fileDescription} type=\"button\" className=\"btn btn-success\" \n                      onClick={() => this.deployingContract()}>\n                Deploy to blockchain!\n              </button>\n            </div> : null }\n            { this.state.contractDeploying && !this.state.contractAddress ?\n            <div className=\"col-sm-3\">\n              <button type=\"button\" disabled={true} className=\"btn btn-success\">\n                Deploying to blockchain...\n              </button>\n            </div>\n            : null }\n          </div>\n        </div> : null }\n\n        { this.state.contractAddress ? \n        <div>\n          <h6>\n            Step 3: Congrats!\n            <br />\n            The contract has been deployed to the following address: <i>{this.state.contractAddress}</i>.\n          </h6>\n          <br />\n          <h6>Step 4: Verification - lets query the contract's values</h6>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">File description</label>\n            <div className=\"col-sm-7\">\n              <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.contractFileDescription}></input>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">IPFS content hash</label>\n            <div className=\"col-sm-7\">\n              <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.contractIpfsHash}></input>\n            </div>\n            {!this.state.contractFileDescription && !this.state.contractIpfsHash ?\n            <div className=\"col-sm-3\">\n              <button type=\"button\" className=\"btn btn-primary\" \n                      onClick={() => this.getContractValues()}>\n                Get contract values\n              </button>\n            </div> : null }\n          </div>\n        </div> : null }\n\n        { this.state.contractFileDescription && this.state.contractIpfsHash ?\n        <div>\n          <h6>Conclusion: Download file from IPFS using the IPFS content hash</h6>\n          <div className=\"col-sm-3\">\n            <a href={this.state.ipfsLink}          \n               target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-primary\">\n              Download file\n            </a>\n          </div>\n        </div> : null }\n      </main>\n    );\n  }\n}\n\nexport default IPFS;\n","import React, { Component } from 'react';\nimport utils from './utils'\nimport MissingConfig from './Shared'\nimport contractJson from './contracts/Openlaw.json'\n\nclass OpenLaw extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = {     \n      missingConfig: false,\n      systemCreds: 'zzm2cidm83:HuII2FdGEet5Vl91IKAipZxBvNHMRgwqLjxv7E1LGq0', //from /qdata_config/systemcreds/auth of the container\n      chainId: 979323005,\n      openlaw_jwt: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NDExOTYxNjIsIm5iZiI6MTU0MTEwOTc2MiwiaWF0IjoxNTQxMTA5NzYyLCJ1c2VySWQiOiIxODYyNGU0Ni00ZGQ3LTQ0OGEtYjBjOS01ZWI0ODc3N2FhNDIifQ.jDQxAVPVcEBrNCrdyLh4LbzWTZM-RwMrz9IAPKj6XZ0',\n      contractAddress: '0x96C72788E31d452C408D41262fdC470FDBe25FEd',\n      contractExistsInLocalStorage: false,\n      sampleAgreement: `\n      This is an angreement between two parties: [[PartyA | Uppercase]] and [[PartyB | Uppercase]] and is made as of [[Effective Date: Date]].  Both parties agree that the next time they see each other a high-five will take place in which one person raises their right-hand in a vertical orientation with their fingers and thumb either together or spread slightly apart and the other person does the same.  Then they slap their palms together in a momentary fashion to create a slappy noise.\n        \n**[[PartyA | Uppercase]]:**\n\n[[PartyA Email: Identity]]\n__________________________________________\n\n\n**[[PartyB | Uppercase]]:**\n\n[[PartyB Email: Identity]]\n__________________________________________\n\n      `,\n      sampleAgreementTitle: 'test'\n    }\n  }\n\n  componentDidMount = () => {\n    if (!this.appCredsUsername || !this.appCredsPassword || !this.nodeRpcEndpoint || !this.openlawRpcEndpoint) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n      return\n    }\n  }\n\n  fetchJWT = () => {\n    console.log('getting jwt')\n    const headers = new Headers();\n    headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n    headers.append('Content-Type', 'application/x-www-form-urlencoded')\n    fetch(this.openlawRpcEndpoint + '/app/login',\n        {\n            body: \"userId=joseph.bonfiglio@consensys.net&password=testPassword1!\",\n            headers: headers,\n            method: \"post\"\n        }).then(response => {\n          let jwt = response.headers.get('openlaw_jwt')\n          console.log('openlaw_jwt', jwt)\n        })\n  }\n\n  fetchTemplate = () => {\n    console.log('getting template')\n    const headers = new Headers();\n    headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n    headers.append('openlaw_jwt', this.state.openlaw_jwt)\n    fetch(this.openlawRpcEndpoint + '/template/raw/test',\n        {\n            headers: headers,\n            method: \"GET\"\n        }).then(response => response.json())\n        .then(response => console.log(response))\n  }\n\n  register = () => {\n    console.log('register user')\n    const headers = new Headers();\n    headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n    headers.append('Content-Type', 'application/x-www-form-urlencoded')\n    fetch(this.openlawRpcEndpoint + '/register',\n        {\n            body: \"userId=joseph.bonfiglio@consensys.net&password=testPassword1!&password2=testPassword1!&name=Joe\",\n            headers: headers,\n            method: \"post\"\n        }).then(response => response.status === 200 ? console.log('register success') : console.log('register failed'))\n  }\n\n  async deployContract() {\n    let accounts = await this.web3.eth.personal.getAccounts();\n    let theContract = utils.getContract(this.web3, contractJson, '', [])\n    let deployObj = theContract.encodeABI();\n    let params = {\n      from: accounts[0],\n      gas: 500000000,\n      data: deployObj\n    };\n    this.web3.eth.sendTransaction(params)\n      .on('receipt', (receipt) => {\n        console.log(receipt);\n      })\n      .on('error', (err) => {\n        console.error('Failed to deploy the smart contract. Error: ' + err);\n      })\n      .then((newInstance) => {\n        console.log(newInstance)\n        console.log(`\\tSmart contract deployed, ready to take calls at '${newInstance.contractAddress}'`);\n        this.setState(() => ({\n          contractAddress: newInstance.contractAddress,\n          contractExistsInLocalStorage: true\n        }), () => console.log(newInstance.contractAddress));\n      });\n  }\n\n  configureChain = () => {\n    console.log('configuring chain')\n    const headers = new Headers();\n    headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n    headers.append('Content-Type', 'application/x-www-form-urlencoded')\n    headers.append('openlaw_jwt', this.state.openlaw_jwt)\n\n    let prefix = this.nodeRpcEndpoint.startsWith('http://') ? 'http://' : 'https://'\n    //let nodeUrl = `${prefix}${this.state.systemCreds}@${this.nodeRpcEndpoint.replace(prefix, '')}`\n    let nodeUrl = `${prefix}${this.state.systemCreds}@${this.nodeRpcEndpoint.replace(prefix, '')}`\n\n    fetch(this.openlawRpcEndpoint + '/ethereum/private/configure',\n        {\n          body: `url=${encodeURIComponent(nodeUrl)}&chainId=${this.state.chainId}&signatureAddress=${this.state.contractAddress}`,\n          headers: headers,\n          method: \"post\"\n        }).then(response => {\n          response.status === 200 ? console.log('configure success') : console.log('configure failed')\n        })\n  }\n\n  changeNetworkToPrivate = () => {\n    console.log('configure network as private')\n    const headers = new Headers();\n    headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n    headers.append('openlaw_jwt', this.state.openlaw_jwt)\n    fetch(this.openlawRpcEndpoint + '/ethereum/changeEthereumNetwork/Private',\n        {\n            headers: headers,\n            method: \"get\"\n        }).then(response => {\n          response.status === 200 ? console.log('change network to private success') : console.log('change network to private failed')\n          console.log(response.json())\n        })\n  }\n\n  createTemplate = () => {\n    console.log('creating test template')\n    const headers = new Headers();\n    headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n    headers.append('content-type', 'text/plain;charset=UTF-8')\n    headers.append('openlaw_jwt', this.state.openlaw_jwt)\n    let url = `${this.openlawRpcEndpoint}/upload/template/${this.state.sampleAgreementTitle}`\n    return fetch(url, {\n      method: 'POST',\n      headers: headers,\n      body: this.state.sampleAgreement\n    }).then(response => response.json())\n    .then(response => console.log(response))\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <MissingConfig header=\"OpenLaw\" />\n      )\n    }\n    return (\n      <main className=\"container\">\n        <h2>OpenLaw</h2>\n        <h5>\n          The purpose of this sample is to show how you can create an OpenLaw template which triggers an embedded smart contract \n          once it's signed by all parties involved.\n        </h5>\n        <br />\n        <h6>Deploy a sample agreement contract</h6>\n        <h6>\n          Step 1: \n\n          <button className=\"btn btn-sm btn-link\" onClick={() => this.register()}>register first user</button>\n\n          <button className=\"btn btn-sm btn-link\" onClick={() => this.fetchJWT()}>Get JWT</button>\n\n          <button className=\"btn btn-sm btn-link\" onClick={() => this.createTemplate()}>create template</button>\n\n          <button className=\"btn btn-sm btn-link\" onClick={() => this.fetchTemplate()}>get template</button>\n\n          <button className=\"btn btn-sm btn-link\" onClick={() => this.deployContract()}>deploy contract</button>\n\n          <button className=\"btn btn-sm btn-link\" onClick={() => this.configureChain()}>configure chain</button>\n\n          <button className=\"btn btn-sm btn-link\" onClick={() => this.changeNetworkToPrivate()}>set network to private</button>\n        </h6>\n\n        <h6>Step 2: Create a sample OpenLaw contract template</h6>\n\n        \n        \n      </main>\n    );\n  }\n}\n\nexport default OpenLaw;\n","import React, { Component } from 'react';\nimport utils from './utils'\nimport MissingConfig from './Shared'\n\nclass IDregistry extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = {     \n      missingConfig: false,\n      fetchingDirectory: false,\n      directoryContractAddress: ''\n    }\n  }\n\n  componentDidMount = () => {\n    if (!this.appCredsUsername || !this.appCredsPassword || !this.nodeRpcEndpoint || !this.idRegistryRpcEndpoint) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n    }\n  }\n\n  fetchDirectory = () => {\n    this.setState(() => ({\n      fetchingDirectory: true\n    }), () => {\n      var headers = new Headers();\n      headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n      headers.append('Accept', 'application/json, text/plain, */*',)\n      let url = `${this.idRegistryRpcEndpoint}/api/v1/directories`\n      fetch(url, {\n        method: 'GET',\n        headers: headers\n      }).then(response => response.json())\n      .then(response => {\n        let dir = response[0]\n        this.setState(() => ({\n          directoryContractAddress: dir.directory\n        }))\n      })\n    })\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <MissingConfig header=\"ID Registry\" />\n      )\n    }\n    return (\n      <main className=\"container\">\n        <h2>ID Registry</h2>\n        <h5>\n          The purpose of this sample is to show how you can use Kaleido's ID Registry service to create an organization and\n          add users to that organization.\n        </h5>\n        <br />    \n        { !this.state.directoryContractAddress ? \n        <div>\n          <h6>\n            Fetch directory contract address from ID Registry service\n          </h6>\n          <div className=\"col-sm-5\">\n            <button disabled={this.state.fetchingDirectory} type=\"button\" className=\"btn btn-primary\" \n                    onClick={() => this.fetchDirectory()}>\n              Get contract address\n            </button>\n          </div> \n        </div> : \n        \n        <div>\n          <h6>\n            The directories contract has been deployed to the following address: <i>{this.state.directoryContractAddress}</i>.\n          </h6>\n          <h6>\n            Next up: let's bind your verified organizational identity (i.e. the validated x509 cert) with an Ethereum account and establish an on-chain organizational identity\n          </h6>\n        </div>\n        }\n\n      </main>\n    );\n  }\n}\n\nexport default IDregistry;\n","import React, { Component } from 'react';\nimport contractJson from './contracts/auditlog.json'\nimport utils from './utils'\nimport { Timeline, TimelineBlip } from 'react-event-timeline'\nimport JSONPretty from 'react-json-pretty';\nimport MissingConfig from './Shared'\n\nclass AuditLog extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = {\n      missingConfig: false,\n      contractExistsInLocalStorage: localStorage.getItem('auditLogContractAddress') ? true : false,\n      contractAddress: localStorage.getItem('auditLogContractAddress'),\n      validMsg: false,\n      msg: '',\n      addingMsg: false,\n      auditRecordCount: 0,\n      viewRecordId: 0,\n      viewRecordEntityAddress: '',\n      viewPrettyJson: '',\n      viewJsonMessage: 'click record on left to view transaction details',\n      showEditingContract: false,\n      editContractAddress: '',\n      editContractAddressValid: false,\n      modifyingContract: false\n    }\n  }\n\n  componentDidMount = () => {\n    if (!this.appCredsUsername || !this.appCredsPassword || !this.nodeRpcEndpoint) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n      return\n    }\n    if (this.state.contractAddress) {\n      this.getNumberOfRecords()\n    }\n  }\n\n  deployingContract = () => {\n    this.setState(() => ({\n      modifyingContract: true\n    }), () => this.deployContract());\n  }\n\n  async getNumberOfRecords() {\n    let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, []);\n    let records = await theContract.methods.getSize().call()\n    this.setState(() => ({\n      auditRecordCount: Number.parseInt(records)\n    }))\n  }\n\n  async deployContract() {\n    let accounts = await this.web3.eth.personal.getAccounts();\n    let theContract = utils.getContract(this.web3, contractJson, '', [])\n    let deployObj = theContract.encodeABI();\n    let params = {\n      from: accounts[0],\n      gas: 500000000,\n      data: deployObj\n    };\n    this.web3.eth.sendTransaction(params)\n      .on('receipt', (receipt) => {\n        console.log(receipt);\n      })\n      .on('error', (err) => {\n        console.error('Failed to deploy the smart contract. Error: ' + err);\n      })\n      .then((newInstance) => {\n        console.log(newInstance)\n        console.log(`\\tSmart contract deployed, ready to take calls at '${newInstance.contractAddress}'`);\n        this.setState(() => ({\n          contractAddress: newInstance.contractAddress,\n          contractExistsInLocalStorage: true,\n          modifyingContract: false\n        }), () => localStorage.setItem('auditLogContractAddress', newInstance.contractAddress));\n      });\n  }\n\n  msgChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      msg: val,\n      validMsg: this.isJSON(val)\n    }));\n  };\n\n  isJSON = (str) => {\n    if( typeof( str ) !== 'string' ) { \n      return false;\n    }\n    try {\n      JSON.parse(str);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  addMsg = () => {\n    this.setState(() => ({\n      addingMsg: true\n    }), async () => {\n      let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, [])\n      let accounts = await this.web3.eth.personal.getAccounts();\n      let params = {\n        from: accounts[0],\n        gas: 5000000\n      };\n      await theContract.methods.push(accounts[0], this.state.msg).send(params)\n        .on('error', (err) => {\n          console.error('Failed to call the smart contract. Error: ' + err);\n        })\n        .then((resp) => {\n          console.log(resp)\n          this.setState(() => ({\n            msg: '',\n            addingMsg: false,\n            validMsg: false,\n            auditRecordCount: this.state.auditRecordCount + 1\n          }), () => this.fetchRecord(this.state.auditRecordCount - 1));\n        });\n    });\n  };\n\n  renderTimelines() {\n    let records = [], max = 100\n    for (let i = this.state.auditRecordCount - 1; i >= 0 && max > 0; i--, max--) {\n      let color = i % 2 === 0 ? \"#03a9f4\" : \"#6fba1c\"\n      records.push(\n        <div key={i+1} style={{cursor: 'pointer'}} onClick={() => this.fetchRecord(i)}>\n          <TimelineBlip title={`#${i+1}`} iconColor={color}/>\n        </div>)\n    }\n    return records;\n  }\n\n  fetchRecord = (index) => {\n    this.setState(() => ({\n      fetchingRecord: true,\n      viewJsonMessage: `Fetching record #${index+1}...`\n    }), async () => {\n      let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, []);\n      let record = await theContract.methods.logEntries(index).call()\n      this.setState(() => ({\n        viewRecordId: index+1,\n        viewPrettyJson: record.payload,\n        viewRecordEntityAddress: record.entityAddress,\n        fetchingRecord: false\n      }));\n    });\n  }\n\n  editingContract = () => {\n    this.setState(() => ({\n      showEditingContract: !this.state.showEditingContract\n    }));\n  }\n\n  clearContract = () => {\n    this.setState(() => ({\n      modifyingContract: true\n    }), () => {\n      localStorage.removeItem('auditLogContractAddress')\n      window.location.reload()\n    });\n  }\n\n  changeContractAddress = () => {\n    this.setState(() => ({\n      modifyingContract: true\n    }), () => {\n      let theContract = utils.getContract(this.web3, contractJson, this.state.editContractAddress, []);\n      if (!theContract) {\n        alert(\"invalid contract address\")\n        this.setState(() => ({\n          modifyingContract: false\n        }))\n      }\n      localStorage.setItem('auditLogContractAddress', this.state.editContractAddress)\n      window.location.reload()\n    });\n  }\n\n  editContractAddressChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      editContractAddress: val,\n      editContractAddressValid: val.startsWith('0x') && val.length === 42\n    }));\n  };\n\n  editContractPanel = () => {\n    return (\n      <div>        \n        <div className=\"col-sm-12\">\n          <button className=\"btn btn-sm btn-link\" onClick={() => this.editingContract()}>load a previously deployed contract</button>\n        </div>\n        { this.state.showEditingContract ?\n        <div>\n          <small className=\"col-sm-12\">\n            load a previously deployed contract, or, clear the above loaded contract from local storage so you can start over and deploy a brand new one\n          </small>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">Audit log contract address</label>\n            <div className=\"col-sm-5\">\n              <input disabled={this.state.modifyingContract} type=\"text\" className=\"form-control\" onChange={this.editContractAddressChanged} />\n            </div>\n            <div className=\"col-sm-5\">\n              <button disabled={!this.state.editContractAddressValid || this.state.modifyingContract} type=\"button\" className=\"btn btn-sm btn-primary\" \n                      onClick={() => this.changeContractAddress()}>\n                load contract\n              </button>\n              { this.state.contractExistsInLocalStorage ? <small style={{marginLeft: '15px'}}>or</small> : null }\n              { this.state.contractExistsInLocalStorage ? \n                <button style={{marginLeft: '15px'}} type=\"button\" className=\"btn btn-sm btn-warning\" disabled={this.state.modifyingContract}\n                        onClick={() => this.clearContract()}>\n                  clear current contract\n                </button> : null }\n            </div>\n          </div>\n        </div>  : null }\n      </div>\n    )\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <MissingConfig header=\"Audit Log\" />\n      )\n    }\n    const timelinePanel = {\n      overflowY: 'scroll',\n      maxHeight: '500px',\n      borderRight: '1px solid rgba(0,0,0,.1)',\n    }\n    return (\n      <main className=\"container\">\n        <h2>Audit Log</h2>\n        <h5>\n          The purpose of this sample is to show how you can use a simple smart contract as an audit log to view records\n          as they're submitted over time.\n        </h5>\n        <br />\n        { !this.state.contractExistsInLocalStorage ? \n        <div>\n          <h6>\n            Step 1: Deploy a new audit log contract to track log records going forward, or, specify a previously deployed audit log contract\n          </h6>\n          <div className=\"col-sm-3\">\n            <button type=\"button\" className=\"btn btn-success\" \n                    disabled={ this.state.modifyingContract }\n                    onClick={() => this.deployingContract()}>\n              { this.state.modifyingContract ? \"Deploying to blockchain...\" : \"Deploy to blockchain!\" }\n            </button>\n          </div>\n          <small>or</small>\n          {this.editContractPanel()}\n        </div> : null }\n        { this.state.contractAddress ? \n        <div>\n          <h6>\n            The audit log smart contract has been deployed to the following address: \n            <i> {this.state.contractAddress}</i>.\n            <br />\n            {this.editContractPanel()}\n          </h6>\n          <br />\n          <h6>Add new log record by calling a function on the smart contract</h6>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">JSON payload</label>\n            <div className=\"col-sm-7\">\n              <textarea disabled={this.state.addingMsg} onChange={this.msgChanged} \n                        className=\"form-control\"\n                        rows=\"3\" value = {this.state.msg} />\n            </div>\n            <div className=\"col-sm-3\">\n              <button disabled={this.state.addingMsg || !this.state.validMsg} \n                      type=\"button\" className=\"btn btn-primary\" onClick={() => this.addMsg()}>\n                {this.state.addingMsg ? \"Adding...\" : \"Add\"}\n              </button>\n              {this.state.msg && !this.state.validMsg ? \" invalid json \" : \"\"}\n            </div>\n          </div>\n          {this.state.auditRecordCount > 0 ?\n          <div>\n            <hr />\n            <h6>Audit log history (most recent records appear at top)</h6>\n            <br />\n            <div className=\"row col-sm-12\">\n              <div style={timelinePanel} className=\"col-sm-3\">\n                <Timeline>\n                  {this.renderTimelines()}\n                </Timeline>\n              </div>\n              <div className=\"col-sm-8\">\n                { !this.state.fetchingRecord && this.state.viewRecordId > 0 ?\n                <div>\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-2 col-form-label\">Record #</label>\n                    <div className=\"col-sm-10\">\n                      <input type=\"text\" readOnly={true} className=\"form-control-plaintext\" value={this.state.viewRecordId}></input>\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-2 col-form-label\">Entity address</label>\n                    <div className=\"col-sm-10\">\n                      <input type=\"text\" readOnly={true} className=\"form-control-plaintext\" value={this.state.viewRecordEntityAddress}></input>\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-2 col-form-label\">Payload</label>\n                    <div className=\"col-sm-10\">\n                      <JSONPretty id=\"json-pretty\" json={this.state.viewPrettyJson} className=\"form-control-plaintext\"></JSONPretty>\n                    </div>\n                  </div> \n                </div> : \n                <div>\n                  { this.state.viewJsonMessage }\n                </div> }\n              </div>\n            </div>\n          </div> : null }\n        </div> : null }\n      </main>\n    );\n  }\n}\n\nexport default AuditLog;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport Configure from './Configure'\nimport HDwallet from './HDwallet'\nimport IPFS from './IPFS'\nimport OpenLaw from './OpenLaw'\nimport IDregistry from './IDregistry'\nimport AuditLog from './AuditLog'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <header className=\"\">\n            <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\" \n                  rel=\"stylesheet\" \n                  integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" \n                  crossOrigin=\"anonymous\" />\n            <div>\n              <Link to=\"/\">\n                <button className=\"btn btn-link\">Configure</button>\n              </Link>\n              <Link to=\"/hdwallet\">\n                <button className=\"btn btn-link\">HDWallet</button>\n              </Link>\n              <Link to=\"/ipfs\">\n                <button className=\"btn btn-link\">IPFS</button>\n              </Link>\n              <Link to=\"/idregistry\">\n                <button className=\"btn btn-link\">ID Registry</button>\n              </Link>\n              <Link to=\"/openlaw\">\n                <button className=\"btn btn-link\">OpenLaw</button>\n              </Link>\n              <Link to=\"/auditlog\">\n                <button className=\"btn btn-link\">Audit Log</button>\n              </Link>\n            </div>\n          </header>\n          <hr />\n          <div>\n            <Route exact path=\"/\" component={Configure} />\n            <Route exact path=\"/hdwallet\" component={HDwallet} />\n            <Route exact path=\"/ipfs\" component={IPFS} />\n            <Route exact path=\"/idregistry\" component={IDregistry} />\n            <Route exact path=\"/openlaw\" component={OpenLaw} />\n            <Route exact path=\"/auditlog\" component={AuditLog} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}