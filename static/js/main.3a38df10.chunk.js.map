{"version":3,"sources":["HDwallet.js","IPFS.js","Configure.js","OpenLaw.js","IDregistry.js","App.js","serviceWorker.js","index.js","utils.js"],"names":["HDwallet","props","_this","Object","_Users_joebonfiglio_code_kaleido_samples_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_joebonfiglio_code_kaleido_samples_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_joebonfiglio_code_kaleido_samples_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","componentDidMount","consortiaId","appCredsUsername","appCredsPassword","nodeRpcEndpoint","hdwalletRpcEndpoint","hdwalletWalletId","blockExplorerUrl","endsWith","setState","msg","missingConfig","msgChanged","event","val","target","value","lockMsg","locked","fetchHdwallet","hdwalletAddress","hdwalletPrivateKey","fetchingHdwalletIndex","_Users_joebonfiglio_code_kaleido_samples_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_joebonfiglio_code_kaleido_samples_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","hwa","wrap","_context","prev","next","hasHdwalletIndex","getHdwalletAccount","state","hdwalletIndex","sent","address","privateKey","stop","hdwalletIndexChanged","deployingContract","contractDeploying","deployContract","params","gas","data","utils","getContract","web3","contractJson","encodeABI","eth","accounts","signTransaction","concat","then","signed","sendSignedTransaction","rawTransaction","on","receipt","console","log","err","error","process","exit","newInstance","contractAddress","contractFrom","from","transactionHash","getContractValue","methods","get","contractValue","hdwalletAccountIndex","headers","Headers","append","btoa","fetch","method","response","json","bindLocalStorage","_Users_joebonfiglio_code_kaleido_samples_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","buildWeb3","_this2","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","className","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","to","disabled","onChange","rows","type","onClick","min","max","readOnly","href","substr","Component","IPFS","ipfsRpcEndpoint","fileChangedHandler","file","files","selectedFile","uploadToIpfs","uploadingFile","formData","FormData","body","r","ipfsLink","buildServiceUrlWithCreds","ipfsHash","Hash","uploadedFile","fileDescriptionChanged","fileDescription","getContractValues","contractFileDescription","contractIpfsHash","downloadFile","url","personal","getAccounts","length","theContract","deployObj","sendTransaction","_this3","ref","fileRef","rel","Configure","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateLocalStorage","localStorage","setItem","current","openlawRpcEndpoint","alert","React","createRef","getItem","react_default","OpenLaw","openlawUrl","assertThisInitialized","openlawTemplateUrl","sampleAgreement","sampleAgreementTitle","Link","IDregistry","App","BrowserRouter","integrity","crossOrigin","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","web3__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","web3__WEBPACK_IMPORTED_MODULE_0___default","n","t","priv","contract","contractArgs","abi","JSON","parse","bytecode","ret","Contract","deploy","arguments","serviceRpcEndpoint","prefix","startsWith","replace","Web3"],"mappings":"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","file":"static/js/main.3a38df10.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport contractJson from './contracts/hdwallet.json'\nimport { Link } from 'react-router-dom';\n// import { sha256 } from 'js-sha256'\nimport utils from './utils'\n\nclass HDwallet extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = { \n      missingConfig: false,    \n      msg: '',\n      locked: false,\n      hdwalletAddress: '',\n      hdwalletPrivateKey: '',\n      hdwalletIndex: '',\n      fetchingHdwalletIndex: false,\n      contractDeploying: false,\n      contractAddress: '',\n      contractFrom: '',\n      contractValue: '',\n      transactionHash: ''\n    }\n  }\n\n  componentDidMount = () => {\n    if (!this.consortiaId || !this.appCredsUsername || !this.appCredsPassword || \n      !this.nodeRpcEndpoint || !this.hdwalletRpcEndpoint || !this.hdwalletWalletId) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n      return\n    }\n    this.blockExplorerUrl = this.nodeRpcEndpoint.endsWith('dev.photic.io') ? 'explorer-dev.photic.io' : 'explorer.kaleido.io'\n    this.setState(() => ({\n      msg: \"Sample message\"\n    }))\n  }\n\n  msgChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      msg: val\n    }));\n  };\n\n  lockMsg = () => {\n    this.setState(() => ({\n      locked: true\n    }));\n  };\n\n  fetchHdwallet = () => {\n    this.setState(() => ({\n      hdwalletAddress: '',\n      hdwalletPrivateKey: '',\n      fetchingHdwalletIndex: true\n    }), async () => {\n      if (this.hasHdwalletIndex()) {\n        let hwa = await this.getHdwalletAccount(this.state.hdwalletIndex)\n        this.setState(() => ({\n          hdwalletAddress: hwa.address,\n          hdwalletPrivateKey: hwa.privateKey,\n          fetchingHdwalletIndex: false\n        }));\n      }\n    });\n  }\n\n  hasHdwalletIndex = () => {\n    return this.state.hdwalletIndex && this.state.hdwalletIndex >= 0\n  }\n\n  hdwalletIndexChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      hdwalletIndex: val\n    }));\n  };\n  \n  deployingContract = () => {\n    this.setState(() => ({\n      contractDeploying: true\n    }), () => this.deployContract());\n  }\n\n  deployContract = () => {\n    let theContract = utils.getContract(this.web3, contractJson, '', [this.state.msg]);\n    let deployObj = theContract.encodeABI();\n    let params = {\n      gas: 500000000,\n      data: deployObj\n    };\n    this.web3.eth.accounts.signTransaction(params, `0x${this.state.hdwalletPrivateKey}`).then((signed) => {\n      this.web3.eth.sendSignedTransaction(signed.rawTransaction)\n        .on('receipt', (receipt) => {\n          console.log(receipt);\n        })\n        .on('error', (err) => {\n          console.error('Failed to deploy the smart contract. Error: ' + err);\n          process.exit(1);\n        })\n        .then((newInstance) => {\n          console.log(newInstance)\n          console.log(`\\tSmart contract deployed, ready to take calls at '${newInstance.contractAddress}'`);\n          this.setState(() => ({\n            contractAddress: newInstance.contractAddress,\n            contractFrom: newInstance.from,\n            transactionHash: newInstance.transactionHash\n          }));\n        });\n    });\n  }\n\n  getContractValue = () => {\n    let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, []);\n    theContract.methods.get().call().then((value) => {\n      console.log('\\tSmart contract current state: %j', value);\n      this.setState(() => ({\n        contractValue: value\n      }));\n    });\n  }\n\n  getHdwalletAccount = (hdwalletAccountIndex) => {\n    console.log('fetching hd wallet account to use')\n    const headers = new Headers();\n    headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n    headers.append('content-type', 'application/json')\n    headers.append('Accept', 'application/json, text/plain, */*',)\n    return fetch(`${this.hdwalletRpcEndpoint}/wallets/${this.hdwalletWalletId}/accounts/${hdwalletAccountIndex}`, {\n      method: 'GET',\n      headers: headers\n    }).then(response => response.json())\n  }\n  \n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <main>\n          <div className=\"container\">\n            <h2>HDWallet</h2>\n            missing&nbsp;\n            <Link to=\"/\">\n              config\n            </Link>\n          </div>\n        </main>\n      )\n    }\n    return (\n      <main className=\"container\">\n        <h2>HDWallet</h2>\n        <h5>\n          The purpose of this sample is to show how you can anonymously submit a transaction to the blockchain. We will deploy a \n          simple smart contract which stores and exposes a single value. \n        </h5>\n        <br />\n        <h6>\n          Step 1: Enter a message. This message is the value that will be included in the smart contract when we deploy it in the next step.\n        </h6>\n        <div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">Message</label>\n            <div className=\"col-sm-7\">\n              <textarea disabled={this.state.locked} onChange={this.msgChanged} \n                        className=\"form-control\"\n                        rows=\"2\" value = {this.msg} />\n            </div>\n            { !this.state.locked ?\n            <div className=\"col-sm-3\">\n              <button disabled={!this.state.msg} \n                      type=\"button\" className=\"btn btn-primary\" onClick={() => this.lockMsg()}>\n                Next\n              </button>\n            </div> : null }\n          </div>\n          { this.state.locked ? \n            <div>\n              <h6>\n                Step 2: Let's choose an account generated by your HDWallet to sign the transaction that deploys \n                our contract containing the above message.\n              </h6>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">HDWallet account index</label>\n                <div className=\"col-sm-2\">\n                  <input type=\"number\" min=\"0\" max=\"10000\" className=\"form-control col-sm-12\" \n                         disabled={this.state.contractDeploying}\n                         value={this.state.hdwalletIndex} onChange={this.hdwalletIndexChanged}></input>\n                </div>\n                { !this.state.contractDeploying ? \n                <div className=\"col-sm-3\">\n                  <button disabled={this.state.fetchingHdwalletIndex || !this.hasHdwalletIndex()} type=\"button\" \n                          className=\"btn btn-primary\" onClick={() => this.fetchHdwallet()}>\n                    Fetch HDWallet account\n                  </button>\n                </div> : null }\n              </div>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">HDWallet address</label>\n                <div className=\"col-sm-7\">\n                  <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.hdwalletAddress}></input>\n                </div>\n              </div>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">HDWallet signing key</label>\n                <div className=\"col-sm-7\">\n                  <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.hdwalletPrivateKey}></input>\n                </div>\n                { !this.state.contractDeploying && this.state.hdwalletAddress && this.state.hdwalletPrivateKey ? \n                <div className=\"col-sm-3\">\n                  <button type=\"button\" className=\"btn btn-success\" onClick={() => this.deployingContract()}>\n                    Deploy to blockchain!\n                  </button>\n                </div> : null }\n                { this.state.contractDeploying && !this.state.contractAddress ?\n                <div className=\"col-sm-3\">\n                  <button type=\"button\" disabled={true} className=\"btn btn-success\">\n                    Deploying to blockchain...\n                  </button>\n                </div>\n                : null}\n              </div>\n            </div> : null }\n            { this.state.contractAddress ? \n            <div>\n              <h6>\n                Step 3: Congrats!\n                <br />\n                The contract has been deployed to the following address: <i>{this.state.contractAddress}</i>.\n                <br />\n                On the blockchain ledger, this\n                <a target='blank' href={`https://${this.blockExplorerUrl}/tx/${this.state.transactionHash}?consortia=${this.consortiaId}&environment=${this.nodeRpcEndpoint.substr(8, 10)}`}> transaction </a> \n                shows that it originated from <i>{this.state.contractFrom}</i>. \n                Notice that this is the account you chose to use from your HDWallet and <b>not</b> your Kaleido node's account address. \n                For future transactions, you can sequentially iterate through the wallet accounts and obtain a different signing key for every transaction.\n                For complete anonymity you should never use a signing key more than once. \n              </h6>\n              <br />\n              <h6>Step 4: Verification - lets query the contract's value</h6>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">Contract value</label>\n                <div className=\"col-sm-7\">\n                  <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.contractValue}></input>\n                </div>\n                {!this.state.contractValue ?\n                <div className=\"col-sm-3\">\n                  <button type=\"button\" className=\"btn btn-primary\" \n                          onClick={() => this.getContractValue()}>\n                    Get contract value\n                  </button>\n                </div> : null }\n              </div>\n              {this.state.contractValue ? \n              <h6>\n                Conclusion: Notice that the value stored in the blockchain contract matches your message above.\n              </h6> : null }\n            </div> : null }\n          </div>  \n      </main>\n    );\n  }\n}\n\nexport default HDwallet;\n","import React, { Component } from 'react';\nimport contractJson from './contracts/ipfs.json'\nimport { Link } from 'react-router-dom';\nimport utils from './utils'\n\nclass IPFS extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = {     \n      missingConfig: false,\n      selectedFile: null,\n      uploadingFile: false,\n      uploadedFile: false,\n      ipfsHash: '',\n      ipfsLink: '',\n      fileDescription: '',\n      contractDeploying: false,\n      contractAddress: '',\n      contractFileDescription: '',\n      contractIpfsHash: ''\n    }\n  }\n\n  componentDidMount = () => {\n    if (!this.appCredsUsername || !this.appCredsPassword || !this.nodeRpcEndpoint || !this.ipfsRpcEndpoint) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n    }\n  }\n\n  fileChangedHandler = (event) => {\n    const file = event.target.files[0]\n    if (!file) {\n      this.setState(() => ({\n        selectedFile: null\n      }))\n    } else {\n      this.setState(() => ({\n        selectedFile: file\n      }))  \n    }\n  }\n\n  uploadToIpfs = () => {\n    this.setState(() => ({\n      uploadingFile: true\n    }), () => {\n      const headers = new Headers();\n      headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n      headers.append('Accept', 'application/json, text/plain, */*',)  \n      const formData = new FormData()\n      formData.append('blob', this.state.selectedFile)\n      fetch(`${this.ipfsRpcEndpoint}/add`, {\n        method: 'POST',\n        headers: headers,\n        body: formData\n      })\n      .then(r => r.json())\n      .then(data => {\n        console.log(data)\n        let ipfsLink = utils.buildServiceUrlWithCreds(this, this.ipfsRpcEndpoint)\n        this.setState(() => ({\n          ipfsHash: data.Hash,\n          ipfsLink: `${ipfsLink}/cat/${data.Hash}`,\n          uploadedFile: true,\n          uploadingFile: false\n        })) \n      })\n    }) \n  }\n\n  fileDescriptionChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      fileDescription: val\n    })) \n  }\n\n  deployingContract = () => {\n    this.setState(() => ({\n      contractDeploying: true\n    }), () => this.deployContract());\n  }\n\n  async deployContract() {\n    let accounts = await this.web3.eth.personal.getAccounts();\n    if (!accounts || accounts.length === 0) {\n      console.error(\"Can't find accounts in the target node\");\n      process.exit(1);\n    }\n    let theContract = utils.getContract(this.web3, contractJson, '', [this.state.fileDescription, this.state.ipfsHash])\n    let deployObj = theContract.encodeABI();\n    let params = {\n      from: accounts[0],\n      gas: 500000000,\n      data: deployObj\n    };\n    this.web3.eth.sendTransaction(params)\n      .on('receipt', (receipt) => {\n        console.log(receipt);\n      })\n      .on('error', (err) => {\n        console.error('Failed to deploy the smart contract. Error: ' + err);\n        process.exit(1);\n      })\n      .then((newInstance) => {\n        console.log(newInstance)\n        console.log(`\\tSmart contract deployed, ready to take calls at '${newInstance.contractAddress}'`);\n        this.setState(() => ({\n          contractAddress: newInstance.contractAddress\n        }));\n      });\n  }\n\n  getContractValues = () => {\n    let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, []);\n    theContract.methods.get().call().then((data) => {\n      console.log('\\tSmart contract current state: %j', data);\n      this.setState(() => ({\n        contractFileDescription: data['0'],\n        contractIpfsHash: data['1']\n      }));\n    });\n  }\n\n  downloadFile = () => {\n    var headers = new Headers();\n    headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n    headers.append('Accept', 'application/json, text/plain, */*',)\n    let url = `${this.ipfsRpcEndpoint}/get/${this.state.ipfsHash}`\n    fetch(url, {\n      method: 'GET',\n      headers: headers\n    })\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <main className=\"container\">\n          <h2>IPFS</h2>\n          missing&nbsp;\n          <Link to=\"/\">\n            config\n          </Link>\n        </main>\n      )\n    }\n    return (\n      <main className=\"container\">\n        <h2>IPFS</h2>\n        <h5>\n          The purpose of this sample is to show how you can add a file to IPFS, and then store a \n          description of the file along with the IPFS content hash in a blockchain smart contract. \n          This is a popular pattern for storing large amounts of data off-chain (in IPFS) and storing the \n          reference (IPFS content hash) of where the data is located on-chain.\n        </h5>\n        <br />\n        <h6>\n          Step 1: Add a file to IPFS and retrieve the IPFS hash back once it's been added.\n        </h6>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">Upload a file</label>\n          <div className=\"col-sm-3\">\n            <input disabled={this.state.uploadedFile} type=\"file\" \n                    onChange={this.fileChangedHandler}\n                  ref={this.fileRef} />\n          </div>\n          { !this.state.uploadedFile ?\n          <div className=\"col-sm-5\">\n            <button disabled={!this.state.selectedFile || this.state.uploadingFile} type=\"button\" className=\"btn btn-primary\" \n                    onClick={() => this.uploadToIpfs()}>\n              Upload file\n            </button>\n          </div> : null }\n        </div>\n\n        { this.state.uploadedFile ? \n        <div>\n          <h6>\n            Step 2: The file has been added to IPFS with the following content hash: <i>{this.state.ipfsHash}</i>.\n            <br /> Enter a friendly file description for this file and then we can deploy the smart contract containing\n            the description and IPFS content hash.\n          </h6>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">File description</label>\n            <div className=\"col-sm-7\">\n              <input type=\"text\" className=\"form-control col-sm-12\" readOnly={this.state.contractDeploying}\n                     onChange={this.fileDescriptionChanged} value={this.state.fileDescription} />\n            </div>\n            { !this.state.contractDeploying ? \n            <div className=\"col-sm-3\">\n              <button disabled={!this.state.fileDescription} type=\"button\" className=\"btn btn-success\" \n                      onClick={() => this.deployingContract()}>\n                Deploy to blockchain!\n              </button>\n            </div> : null }\n            { this.state.contractDeploying && !this.state.contractAddress ?\n            <div className=\"col-sm-3\">\n              <button type=\"button\" disabled={true} className=\"btn btn-success\">\n                Deploying to blockchain...\n              </button>\n            </div>\n            : null }\n          </div>\n        </div> : null }\n\n        { this.state.contractAddress ? \n        <div>\n          <h6>\n            Step 3: Congrats!\n            <br />\n            The contract has been deployed to the following address: <i>{this.state.contractAddress}</i>.\n          </h6>\n          <br />\n          <h6>Step 4: Verification - lets query the contract's values</h6>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">File description</label>\n            <div className=\"col-sm-7\">\n              <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.contractFileDescription}></input>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">IPFS content hash</label>\n            <div className=\"col-sm-7\">\n              <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.contractIpfsHash}></input>\n            </div>\n            {!this.state.contractFileDescription && !this.state.contractIpfsHash ?\n            <div className=\"col-sm-3\">\n              <button type=\"button\" className=\"btn btn-primary\" \n                      onClick={() => this.getContractValues()}>\n                Get contract values\n              </button>\n            </div> : null }\n          </div>\n        </div> : null }\n\n        { this.state.contractFileDescription && this.state.contractIpfsHash ?\n        <div>\n          <h6>Conclusion: Download file from IPFS using the IPFS content hash</h6>\n          <div className=\"col-sm-3\">\n            <a href={this.state.ipfsLink}          \n               target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-primary\">\n              Download file\n            </a>\n          </div>\n        </div> : null }\n      </main>\n    );\n  }\n}\n\nexport default IPFS;\n","import React, { Component } from 'react';\n// import { PrimaryButton } from '@photic/design-kit';\n\nclass Configure extends Component {\n  constructor(props) {\n    super(props)\n    this.consortiaId = React.createRef()\n    this.appCredsUsername = React.createRef()\n    this.appCredsPassword = React.createRef()\n    this.nodeRpcEndpoint = React.createRef()\n    this.hdwalletRpcEndpoint = React.createRef()\n    this.hdwalletWalletId = React.createRef()\n    this.ipfsRpcEndpoint = React.createRef()\n    this.openlawRpcEndpoint = React.createRef()\n  }\n\n  componentDidMount() {\n    this.consortiaId.current.value = localStorage.getItem('consortiaId');\n    this.appCredsUsername.current.value = localStorage.getItem('appCredsUsername');\n    this.appCredsPassword.current.value = localStorage.getItem('appCredsPassword');\n    this.nodeRpcEndpoint.current.value = localStorage.getItem('nodeRpcEndpoint');\n    this.hdwalletRpcEndpoint.current.value = localStorage.getItem('hdwalletRpcEndpoint');\n    this.hdwalletWalletId.current.value = localStorage.getItem('hdwalletWalletId');\n    this.ipfsRpcEndpoint.current.value = localStorage.getItem('ipfsRpcEndpoint');\n    this.openlawRpcEndpoint.current.value = localStorage.getItem('openlawRpcEndpoint');\n  }\n\n  updateLocalStorage = () => {\n    localStorage.setItem('consortiaId', this.consortiaId.current.value);\n    localStorage.setItem('appCredsUsername', this.appCredsUsername.current.value);\n    localStorage.setItem('appCredsPassword', this.appCredsPassword.current.value);\n    localStorage.setItem('nodeRpcEndpoint', this.nodeRpcEndpoint.current.value);\n    localStorage.setItem('hdwalletRpcEndpoint', this.hdwalletRpcEndpoint.current.value);\n    localStorage.setItem('hdwalletWalletId', this.hdwalletWalletId.current.value);\n    localStorage.setItem('ipfsRpcEndpoint', this.ipfsRpcEndpoint.current.value);\n    localStorage.setItem('openlawRpcEndpoint', this.openlawRpcEndpoint.current.value);\n    alert('latest settings saved!')\n  }\n\n  render() {\n    return (\n      <main className=\"container\">\n        <h2>Configure</h2>\n        <h5>\n          This is needed so the samples can connect to your Kaleido environment. All information will be\n          persisted to browser local storage.\n        </h5>\n        <br />\n        <h5>Shared</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">Consortia ID</label>\n          <div className=\"col-sm-4\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.consortiaId} />\n            <small>(ex: zzabcd1234)</small>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">App credentials username</label>\n          <div className=\"col-sm-4\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.appCredsUsername} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">App credentials password</label>\n          <div className=\"col-sm-6\">\n            <input type=\"password\" className=\"form-control col-sm-12\" ref={this.appCredsPassword} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">Node RPC endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.nodeRpcEndpoint} />\n            <small>(ex: http://zz..-zz..-rpc.photic-local.io)</small>\n          </div>\n        </div>\n        <h5>HDWallet</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">HDWallet RPC endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.hdwalletRpcEndpoint} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">HDWallet wallet ID</label>\n          <div className=\"col-sm-4\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.hdwalletWalletId} />\n          </div>\n        </div>\n        <h5>IPFS</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">IPFS RPC endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.ipfsRpcEndpoint} />\n            <small>(ex: http://zz..-zz..-ipfs.photic-local.io/api/v0)</small>\n          </div>\n        </div>\n        <h5>OpenLaw</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">OpenLaw RPC endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.openlawRpcEndpoint} />\n            <small>(ex: http://zz..-zz..-openlaw.photic-local.io)</small>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <div className=\"col-sm-6\">\n          <button type=\"button\"className=\"btn btn-success\" onClick={() => this.updateLocalStorage()}>\n            Save\n          </button>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Configure;\n","import React, { Component } from 'react';\nimport utils from './utils'\nimport { Link } from 'react-router-dom';\n\nclass OpenLaw extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = {     \n      missingConfig: false,\n      openlawUrl: '',\n      sampleAgreement: `\n      This is an angreement between two parties: [[PartyA | Uppercase]] and [[PartyB | Uppercase]] and is made as of [[Effective Date: Date]].  Both parties agree that the next time they see each other a high-five will take place in which one person raises their right-hand in a vertical orientation with their fingers and thumb either together or spread slightly apart and the other person does the same.  Then they slap their palms together in a momentary fashion to create a slappy noise.\n        \n**[[PartyA | Uppercase]]:**\n\n[[PartyA Email: Identity]]\n__________________________________________\n\n\n**[[PartyB | Uppercase]]:**\n\n[[PartyB Email: Identity]]\n__________________________________________\n\n      `,\n      sampleAgreementTitle: 'High Five'\n    }\n  }\n\n  componentDidMount = () => {\n    if (!this.appCredsUsername || !this.appCredsPassword || !this.nodeRpcEndpoint || !this.openlawRpcEndpoint) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n      return\n    }\n    this.setState(() => ({\n      openlawUrl: utils.buildServiceUrlWithCreds(this, this.openlawRpcEndpoint),\n      openlawTemplateUrl: utils.buildServiceUrlWithCreds(this, this.openlawRpcEndpoint) + '/template/raw/test'\n    }))\n  }\n\n  // fetchTemplate = () => {\n  //   console.log('fetching')\n  //   const headers = new Headers();\n  //   headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n  //   headers.append('content-type', 'application/json')\n  //   headers.append('Accept', 'application/json, text/plain, */*')\n  //   let url = this.openlawRpcEndpoint + '/user/details?email=joseph.bonfiglio@consensys.net'\n  //   // let url = this.openlawRpcEndpoint + '/template/raw/test'\n  //   return fetch(url, {\n  //     method: 'GET',\n  //     headers: headers\n  //   }).then(response => response.json())\n  //   .then(response => console.log(response))\n  // }\n\n  // createTemplate = () => {\n  //   console.log('creating')\n  //   const headers = new Headers();\n  //   headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n  //   headers.append('content-type', 'text/plain;charset=UTF-8')\n  //   headers.append('Accept', 'application/json, text/plain, */*')\n  //   let url = `${this.openlawRpcEndpoint}/upload/template/${this.state.sampleAgreementTitle}`\n  //   return fetch(url, {\n  //     method: 'POST',\n  //     headers: headers,\n  //     credentials: 'include'\n  //   }).then(response => response.json())\n  //   .then(response => console.log(response))\n  // }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <main className=\"container\">\n          <h2>IPFS</h2>\n          missing&nbsp;\n          <Link to=\"/\">\n            config\n          </Link>\n        </main>\n      )\n    }\n    return (\n      <main className=\"container\">\n        <h2>OpenLaw</h2>\n        <h5>\n          The purpose of this sample is to show how you can create an OpenLaw template which triggers an embedded smart contract \n          once it's signed by all parties involved.\n        </h5>\n        <br />\n        <h6>\n          Step 1: \n          <a href={this.state.openlawUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-link\">\n            Login to your OpenLaw instance and play\n          </a>\n        </h6>\n        \n        \n      </main>\n    );\n  }\n}\n\nexport default OpenLaw;\n","import React, { Component } from 'react';\nimport utils from './utils'\nimport { Link } from 'react-router-dom';\n\nclass IDregistry extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = {     \n      missingConfig: false\n    }\n  }\n\n  componentDidMount = () => {\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <main className=\"container\">\n          <h2>IPFS</h2>\n          missing&nbsp;\n          <Link to=\"/\">\n            config\n          </Link>\n        </main>\n      )\n    }\n    return (\n      <main className=\"container\">\n        <h2>ID Registry</h2>\n        <h5>\n          coming soon\n        </h5>\n        <br />        \n      </main>\n    );\n  }\n}\n\nexport default IDregistry;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Configure from './Configure'\nimport HDwallet from './HDwallet'\nimport IPFS from './IPFS'\nimport OpenLaw from './OpenLaw'\nimport IDregistry from './IDregistry'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <header className=\"\">\n            <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\" \n                  rel=\"stylesheet\" \n                  integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" \n                  crossOrigin=\"anonymous\" />\n            <div>\n              <Link to=\"/\">\n                <button className=\"btn btn-link\">Configure</button>\n              </Link>\n              <Link to=\"/hdwallet\">\n                <button className=\"btn btn-link\">HDWallet</button>\n              </Link>\n              <Link to=\"/ipfs\">\n                <button className=\"btn btn-link\">IPFS</button>\n              </Link>\n              <Link to=\"/idregistry\">\n                <button className=\"btn btn-link\">ID Registry</button>\n              </Link>\n              <Link to=\"/openlaw\">\n                <button className=\"btn btn-link\">OpenLaw</button>\n              </Link>\n            </div>\n          </header>\n          <hr />\n          <div>\n            <Route exact path=\"/\" component={Configure} />\n            <Route exact path=\"/hdwallet\" component={HDwallet} />\n            <Route exact path=\"/ipfs\" component={IPFS} />\n            <Route exact path=\"/idregistry\" component={IDregistry} />\n            <Route exact path=\"/openlaw\" component={OpenLaw} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import Web3 from 'web3'\n\nconst utils = {\n  bindLocalStorage(t) {\n    t.consortiaId = localStorage.getItem('consortiaId');\n    t.appCredsUsername = localStorage.getItem('appCredsUsername');\n    t.appCredsPassword = localStorage.getItem('appCredsPassword');\n    t.nodeRpcEndpoint = localStorage.getItem('nodeRpcEndpoint');\n    t.hdwalletRpcEndpoint = localStorage.getItem('hdwalletRpcEndpoint');\n    t.hdwalletWalletId = localStorage.getItem('hdwalletWalletId');\n    t.ipfsRpcEndpoint = localStorage.getItem('ipfsRpcEndpoint');\n    t.openlawRpcEndpoint = localStorage.getItem('openlawRpcEndpoint');\n  },\n\n  buildWeb3(t) {\n    if (t.appCredsUsername && t.appCredsPassword && t.nodeRpcEndpoint) {\n      priv.buildWeb3(t)\n    }\n  },\n\n  getContract(web3, contract, contractAddress, contractArgs) {\n    let abi = JSON.parse(contract.abi);\n    let bytecode = '0x' + contract.bytecode;\n    let ret = new web3.eth.Contract(abi, contractAddress);\n    if (!contractAddress) {\n      // this is a new deployment, build the deploy object\n      ret = ret.deploy({\n        data: bytecode,\n        arguments: contractArgs\n      });\n    }\n    return ret;\n  },\n\n  buildServiceUrlWithCreds(t, serviceRpcEndpoint) {\n    let prefix = serviceRpcEndpoint.startsWith('http://') ? 'http://' : 'https://'\n    return `${prefix}${t.appCredsUsername}:${t.appCredsPassword}@${serviceRpcEndpoint.replace(prefix, '')}`\n  }\n}\n\nconst priv = {\n  buildWeb3(t) {\n    t.web3 = new Web3(utils.buildServiceUrlWithCreds(t, t.nodeRpcEndpoint))\n  }\n}\n\nexport default utils "],"sourceRoot":""}